{"remainingRequest":"/home/elisa/PycharmProjects/planillaflask/client/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/elisa/PycharmProjects/planillaflask/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/elisa/PycharmProjects/planillaflask/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/elisa/PycharmProjects/planillaflask/client/src/components/Data.vue?vue&type=template&id=40b9b6da&scoped=true&","dependencies":[{"path":"/home/elisa/PycharmProjects/planillaflask/client/src/components/Data.vue","mtime":1594865575935},{"path":"/home/elisa/PycharmProjects/planillaflask/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/elisa/PycharmProjects/planillaflask/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/elisa/PycharmProjects/planillaflask/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/elisa/PycharmProjects/planillaflask/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgImRpdiIsCiAgICBbCiAgICAgIF9jKCJiciIpLAogICAgICBfdm0uX3YoIkRlcGFydGFtZW50byBkZSBFZHVjYWNpw7NuIC0gQ29tdW5hbCBWYWxwYXJhw61zbyAiKSwKICAgICAgX2MoImJyIiksCiAgICAgIF92bS5fdigiQ29sZWdpbyBkZSBQcm9mZXNvcmFzIHkgUHJvZmVzb3JlcyAiKSwKICAgICAgX3ZtLl9tKDApLAogICAgICBfdm0uX20oMSksCiAgICAgIF9jKAogICAgICAgICJidXR0b24iLAogICAgICAgIHsKICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgIG5hbWU6ICJiLW1vZGFsIiwKICAgICAgICAgICAgICByYXdOYW1lOiAidi1iLW1vZGFsLmNhbGN1bGFyLXN1ZWxkbyIsCiAgICAgICAgICAgICAgbW9kaWZpZXJzOiB7ICJjYWxjdWxhci1zdWVsZG8iOiB0cnVlIH0KICAgICAgICAgICAgfQogICAgICAgICAgXSwKICAgICAgICAgIHN0YXRpY0NsYXNzOiAiYnRuIGJ0bi1zdWNjZXNzIGJ0bi1zbSIsCiAgICAgICAgICBhdHRyczogeyB0eXBlOiAiYnV0dG9uIiB9CiAgICAgICAgfSwKICAgICAgICBbX3ZtLl92KCIgQ2FsY3VsYXIgU3VlbGRvICIpXQogICAgICApLAogICAgICBfYygKICAgICAgICAiYi1tb2RhbCIsCiAgICAgICAgewogICAgICAgICAgcmVmOiAiTW9kYWxDYWxjdWxhclN1ZWxkbyIsCiAgICAgICAgICBhdHRyczogewogICAgICAgICAgICBpZDogImNhbGN1bGFyLXN1ZWxkbyIsCiAgICAgICAgICAgIHRpdGxlOiAiQ2FsY3VsYXIgU3VlbGRvIiwKICAgICAgICAgICAgImhpZGUtZm9vdGVyIjogIiIKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIFsKICAgICAgICAgIF9jKAogICAgICAgICAgICAiYi1mb3JtIiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAidy0xMDAiLAogICAgICAgICAgICAgIG9uOiB7IHN1Ym1pdDogX3ZtLm9uU3VibWl0LCByZXNldDogX3ZtLm9uUmVzZXQgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAiYi1mb3JtLWdyb3VwIiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICBpZDogImZvcm0tdGl0bGUtZ3JvdXAiLAogICAgICAgICAgICAgICAgICAgIGxhYmVsOiAiQmllbm9zIENPUk1VVkFMOiIsCiAgICAgICAgICAgICAgICAgICAgImxhYmVsLWZvciI6ICJmb3JtLXRpdGxlLWlucHV0IgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygiYi1mb3JtLWlucHV0IiwgewogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICBpZDogImZvcm0tdGl0bGUtaW5wdXQiLAogICAgICAgICAgICAgICAgICAgICAgdHlwZTogInRleHQiLAogICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6ICIiLAogICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6CiAgICAgICAgICAgICAgICAgICAgICAgICJJbmdyZXNlIG7Dum1lcm8gZGUgYmllbmlvcyByZWNvbm9jaWRvcyBwb3IgQ09STVVWQUwiCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBtb2RlbDogewogICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5Gb3JtQ2FsY3VsYXJTdWVsZG8uY29ybXV2YWwsCiAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24oJCR2KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIF92bS4kc2V0KF92bS5Gb3JtQ2FsY3VsYXJTdWVsZG8sICJjb3JtdXZhbCIsICQkdikKICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAiRm9ybUNhbGN1bGFyU3VlbGRvLmNvcm11dmFsIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJiLWZvcm0tZ3JvdXAiLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgIGlkOiAiZm9ybS1hdXRob3ItZ3JvdXAiLAogICAgICAgICAgICAgICAgICAgIGxhYmVsOiAiQmllbmlvcyBDUEVJUDoiLAogICAgICAgICAgICAgICAgICAgICJsYWJlbC1mb3IiOiAiZm9ybS1hdXRob3ItaW5wdXQiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKCJiLWZvcm0taW5wdXQiLCB7CiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgIGlkOiAiZm9ybS1hdXRob3ItaW5wdXQiLAogICAgICAgICAgICAgICAgICAgICAgdHlwZTogInRleHQiLAogICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6ICIiLAogICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6CiAgICAgICAgICAgICAgICAgICAgICAgICJJbmdyZXNlIG7Dum1lcm8gZGUgYmllbmlvcyByZWNvbm9jaWRvcyBwb3IgQ1BFSVAiCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBtb2RlbDogewogICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5Gb3JtQ2FsY3VsYXJTdWVsZG8uY3BlaXAsCiAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24oJCR2KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIF92bS4kc2V0KF92bS5Gb3JtQ2FsY3VsYXJTdWVsZG8sICJjcGVpcCIsICQkdikKICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAiRm9ybUNhbGN1bGFyU3VlbGRvLmNwZWlwIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJiLWZvcm0tZ3JvdXAiLAogICAgICAgICAgICAgICAgeyBhdHRyczogeyBpZDogImZvcm0tcmVhZC1ncm91cCIgfSB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAiYi1mb3JtLWNoZWNrYm94LWdyb3VwIiwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBpZDogImZvcm0tY2hlY2tzIiB9LAogICAgICAgICAgICAgICAgICAgICAgbW9kZWw6IHsKICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5Gb3JtQ2FsY3VsYXJTdWVsZG8ucHJpb3JpdGFyaW9zLAogICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24oJCR2KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLiRzZXQoX3ZtLkZvcm1DYWxjdWxhclN1ZWxkbywgInByaW9yaXRhcmlvcyIsICQkdikKICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogIkZvcm1DYWxjdWxhclN1ZWxkby5wcmlvcml0YXJpb3MiCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICBfYygiYi1mb3JtLWNoZWNrYm94IiwgeyBhdHRyczogeyB2YWx1ZTogInRydWUiIH0gfSwgWwogICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIjYwJSBwcmlvcml0YXJpb3M/IikKICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJiLWJ1dHRvbi1ncm91cCIsCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJiLWJ1dHRvbiIsCiAgICAgICAgICAgICAgICAgICAgeyBhdHRyczogeyB0eXBlOiAic3VibWl0IiwgdmFyaWFudDogInByaW1hcnkiIH0gfSwKICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCJTdWJtaXQiKV0KICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgImItYnV0dG9uIiwKICAgICAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IHR5cGU6ICJyZXNldCIsIHZhcmlhbnQ6ICJkYW5nZXIiIH0gfSwKICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCJSZXNldCIpXQogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICkKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMQogICAgICAgICAgKQogICAgICAgIF0sCiAgICAgICAgMQogICAgICApCiAgICBdLAogICAgMQogICkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gWwogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIFsKICAgICAgX2MoImgxIiwgW19jKCJiciIpLCBfdm0uX3YoIkNhbGN1bGFkb3JhIGRlIHN1ZWxkbyAiKV0pLAogICAgICBfYygiaDUiLCBbCiAgICAgICAgX3ZtLl92KCIgSGVycmFtaWVudGEgcGFyYSBwcm9mZXNvcmFzIHkgcHJvZmVzb3JlcyBxdWUgdHJhYmFqYW4gZW4gIiksCiAgICAgICAgX2MoImJyIiksCiAgICAgICAgX3ZtLl92KCJlc3RhYmxlY2ltaWVudG9zIG11bmljaXBhbGVzIGRlIGxhIGNvbXVuYSBkZSBWYWxwYXJhw61zby4gIikKICAgICAgXSkKICAgIF0pCiAgfSwKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJkaXYiLCBbCiAgICAgIF9jKCJoNCIsIFtfYygiYnIiKSwgX3ZtLl92KCJJTlNUUlVDQ0lPTkVTOiAiKV0pLAogICAgICBfdm0uX3YoCiAgICAgICAgIiBBIGNvbnRpbnVhY2nDs24gaW5ncmVzZSBsYSBpbmZvcm1hY2nDs24gcXVlIHNlIHNvbGljaXRhIGFsIHByZXNpb25hciAiCiAgICAgICksCiAgICAgIF9jKCJiciIpLAogICAgICBfdm0uX3YoCiAgICAgICAgJ2VsIGJvdMOzbiAiQ2FsY3VsYXIgc3VlbGRvIi4gQ3VhbmRvIGhheWEgaW5ncmVzYWRvIHRvZGEgbGEgaW5mb3JtYWNpw7NuICcKICAgICAgKSwKICAgICAgX2MoImJyIiksCiAgICAgIF92bS5fdigKICAgICAgICAnY29ycmVjdGFtZW50ZSBwcmVzaW9uZSBlbCBib3TDs24gIkNhbGN1bGFyIGFob3JhIiB5IHZlcsOhIGVsIGRldGFsbGUgJwogICAgICApLAogICAgICBfYygiYnIiKSwKICAgICAgX3ZtLl92KAogICAgICAgICJwb3IgYXNpZ25hY2nDs24gcXVlIGRlYmVyw61hIGFwYXJlY2VyIGVuIHN1IGNvbGlsbGEgZGUgc3VlbGRvIGNhZGEgbWVzLiAiCiAgICAgICksCiAgICAgIF9jKCJiciIpLAogICAgICBfYygiYnIiKQogICAgXSkKICB9Cl0KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}